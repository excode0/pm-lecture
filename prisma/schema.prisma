// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// MEMBUAT TABEL USER
model User {
  id        Int    @id @default(autoincrement())
  name      String
  email     String @unique
  password  String
  role  String @default("user")
  status  String @default("active")
  createdAt DateTime @default(now())
}
// TABEL Dosen
model Dosen {
  id         Int      @id @default(autoincrement())
  nama       String
  email      String   @unique
  nidn        String   @unique
  mataKuliah String
  prodi     String  
  jabatan    String
  status     String   @default("aktif") 
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relasi ke Penilaian
  penilaian  Penilaian[]
}

// TABEL Kriteria
model Kriteria {
  id         Int      @id @default(autoincrement())
  nama       String @unique
  keterangan String?  // Bisa null kalau tidak ada
  bobot      Float    // Bobot untuk perhitungan PM

  // Relasi ke SubKriteria
  subKriteria SubKriteria[]
}

// TABEL SubKriteria
model SubKriteria {
  id         Int      @id @default(autoincrement())
  nama       String
  keterangan String?
  nilai      Int      // Nilai bobot subkriteria
  target     Int   // Target pencapaian (misal: tinggi, sedang, rendah)
  tipe       String   // Jenis kriteria (benefit atau cost)

  // Relasi ke Kriteria
  kriteriaId Int
  kriteria   Kriteria @relation(fields: [kriteriaId], references: [id], onDelete: Cascade)

  // Relasi ke Penilaian
  penilaian  Penilaian[]
}

// TABEL Penilaian (menghubungkan Dosen dengan SubKriteria)
model Penilaian {
  id            Int      @id @default(autoincrement())
  dosenId       Int
  subKriteriaId Int
  nilai         Float    // Nilai aktual yang didapatkan

  // Relasi ke Dosen
  dosen         Dosen   @relation(fields: [dosenId], references: [id], onDelete: Cascade)
  
  // Relasi ke SubKriteria
  subKriteria   SubKriteria @relation(fields: [subKriteriaId], references: [id], onDelete: Cascade)
}
